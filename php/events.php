<?php
require_once 'dbconn.php';
require_once 'db.php';

$obj = new events($db);//variabe $db is created in dbconn.php

$obj->index();

/**
 * Description of events
 *
 * @author Ameer <amirsanni@gmail.com>
 * @date 04-Jan-2017
 */
class events {
    protected $dbObj;
    
    public function __construct($db) {
        $this->dbObj = new db($db);
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
    
    public function index(){
        if(isset($_POST) && $_POST['action']){
            $action = filter_input(INPUT_POST, 'action');
            
            switch($action){
                case 'get':
                    $this->get();
                    break;
                
                case 'post':
                    $this->create();
                    break;
            }
        }
    }
    
    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
    
    public function get(){
        $start_date = filter_input(INPUT_POST, 'start');
        $end_date = filter_input(INPUT_POST, 'end');
        $events = [];
        
        $response = $this->dbObj->getAll($start_date, $end_date);

        if($response){
            foreach($response as $get){
                array_push($events, [
                    'id'=>$get->id,
                    'title'=>$get->title,
                    'description'=>$get->description,
                    'start'=>$get->start,
                    'end'=>$get->end,
                    'allday'=>(bool)$get->allday
                ]);
            }
        }
        
        $this->send($events);
    }
    
    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
    
    public function create(){
        $start_time = filter_input(INPUT_POST, 's');
        $end_time = filter_input(INPUT_POST, 'e');
        $title = filter_input(INPUT_POST, 't');
        $description = filter_input(INPUT_POST, 'description');

        //ensure the start time is not in the past
        $curr_time = gmdate('y-m-d H:i');
        $start_time_in_utc = gmdate('y-m-d H:i', strtotime($start_time));

        if(!$start_time || !$end_time || !$title){
            $json['status'] = 0;//one or more required fields not set
        }

        else if(strtotime($curr_time) > strtotime($start_time_in_utc)){
            $json['status'] = 3;//start time is in the past
        }

        else{
            //set data to insert into db
            $data = [
                'title'=>$title,
                'description'=>$description, 
                'start'=>$start_time, 
                'end'=>$end_time
            ];
            
            //insert event
            $inserted_id = $this->dbObj->createEvent($data);

            $json['status'] = $inserted_id ? 1/*success*/ : 2/*Internal server error*/;
            $json['id'] = $inserted_id;
            $json['debug'] = $inserted_id;
        }
        
        
        $this->send($json);
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
    
    public function send($response){
        header('content-type: application/json');
        
        echo json_encode($response);
    }

    /*
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    ********************************************************************************************************************************
    */
}
